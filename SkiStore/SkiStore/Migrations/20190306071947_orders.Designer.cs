// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkiStore.Data;

namespace SkiStore.Migrations
{
    [DbContext(typeof(SkiStoreProductDbContext))]
    [Migration("20190306071947_orders")]
    partial class orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkiStore.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("SkiStore.Models.CartEntry", b =>
                {
                    b.Property<int>("CartID");

                    b.Property<int>("ProductID");

                    b.Property<int>("Quantity");

                    b.HasKey("CartID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("CartEntries");
                });

            modelBuilder.Entity("SkiStore.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID");

                    b.Property<bool>("Delivered");

                    b.Property<bool>("Paid");

                    b.Property<decimal>("Total");

                    b.Property<string>("User");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SkiStore.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("ImageURL");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("SKU");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Skis",
                            Price = 300m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 2,
                            Name = "Helmet",
                            Price = 150m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 3,
                            Name = "Goggles",
                            Price = 60m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 4,
                            Name = "Poles",
                            Price = 100m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 5,
                            Name = "Boots",
                            Price = 200m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 6,
                            Name = "Jacket",
                            Price = 100m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 7,
                            Name = "Pants",
                            Price = 100m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 8,
                            Name = "Gloves",
                            Price = 40m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 9,
                            Name = "Flask",
                            Price = 20m,
                            Quantity = 0
                        },
                        new
                        {
                            ID = 10,
                            Name = "Buff",
                            Price = 40m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("SkiStore.Models.CartEntry", b =>
                {
                    b.HasOne("SkiStore.Models.Cart", "Cart")
                        .WithMany("CartEntries")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SkiStore.Models.Product", "Product")
                        .WithMany("CartEntries")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SkiStore.Models.Order", b =>
                {
                    b.HasOne("SkiStore.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
